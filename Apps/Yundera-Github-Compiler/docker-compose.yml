name: yunderagithubcompiler

services:
  yunderagithubcompiler:
    image: krizcold/yundera-github-compiler:latest
    container_name: yunderagithubcompiler
    restart: unless-stopped
    expose:
      - "3000"
    user: "root"
    entrypoint: ["/bin/sh"]
    command:
      - -c
      - |
        npm run setup
    environment:
      # Application settings
      WEBUI_PORT: "3000"
      
      # CasaOS integration
      DEPLOYMENT_MODE: "appstore"
      CASAOS_API_HOST: "localhost"
      CASAOS_API_PORT: "8080"
      DATA_ROOT: $DATA_ROOT

    volumes:        
      # cloned repos
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/repos
        target: /app/repos

      # persistent UI data storage
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/uidata
        target: /app/uidata

      # Mount DATA directory as read-only
      - type: bind
        source: /DATA
        target: /DATA
        read_only: true

      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

    # Connect to the same network as the CasaOS service
    networks:
      - pcs
    
    # Add privileges to access CasaOS data (similar to CasaOS container)
    privileged: true
    
    # Add capabilities
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN

    x-casaos:
      volumes:
        - container: /app/repos
          description:
            en_us: "Git repos are cloned here."
        - container: /app/uidata
          description:
            en_us: "Persistent UI data storage."

# Define the network as external, since it's created by the main NSL stack
networks:
  pcs:
    external: true

x-casaos:
  architectures:
    - amd64
    - arm64
  main: yunderagithubcompiler
  author: krizcold
  developer: krizcold
  icon: https://github.com/krizcold/Yundera-Github-Compiler/blob/main/YunderaCompiler.png?raw=true
  tagline:
    en_us: "Automatically build and deploy GitHub repos on Yundera"
  category: Utilities
  description:
    en_us: "Clone, build, and run Docker-based projects directly from GitHub URLs."
  title:
    en_us: "Yundera GitHub Compiler"
  store_app_id: yunderagithubcompiler
  is_uncontrolled: false
  index: /
  webui_port: 3000
  pre-install-cmd: |
    #!/bin/bash
    set -e
    
    echo "üöÄ Synchronous pre-install fixer started."

    # --- Step 1: Generate secrets and detect GID ---
    AUTH_HASH=$(openssl rand -hex 32)
    if [ -z "$AUTH_HASH" ]; then
      echo "‚ùå Failed to generate AUTH_HASH, aborting"
      exit 1
    fi
    echo "üîê Generated AUTH_HASH: ${AUTH_HASH:0:16}..."

    if [ -S /var/run/docker.sock ]; then
      DOCKER_GID=$(stat -c '%g' /var/run/docker.sock)
    else
      DOCKER_GID=999
    fi
    echo "‚úÖ Docker GID is: $DOCKER_GID"

    # --- Step 2: Define path and wait for compose file ---
    COMPOSE_FILE="/DATA/AppData/casaos/apps/yunderagithubcompiler/docker-compose.yml"
    echo "‚è≥ Waiting for compose file at $COMPOSE_FILE..."
    
    counter=0
    while [ ! -f "$COMPOSE_FILE" ] && [ $counter -lt 60 ]; do
      sleep 2
      counter=$((counter + 2))
    done

    if [ ! -f "$COMPOSE_FILE" ]; then
      echo "‚ùå Compose file was not created. Aborting."
      exit 1
    fi
    echo "‚úÖ Compose file found."

    # --- Step 3: Modify the compose file with CORRECT sed syntax ---
    echo "üîß Modifying the compose file..."

    # CORRECTED: Add docker.sock mount using proper multi-line append syntax for sed.
    # This finds the line with 'read_only: true' and appends the new volume block right after it.
    sed -i '/^[[:space:]]*read_only:[[:space:]]*true/a \
          - type: bind\
            source: /var/run/docker.sock\
            target: /var/run/docker.sock' "$COMPOSE_FILE"

    # CORRECTED: Add environment variables using proper multi-line append syntax.
    sed -i "/WEBUI_PORT:/a \
          DOCKER_GID: \"$DOCKER_GID\"\
          AUTH_HASH: \"$AUTH_HASH\"" "$COMPOSE_FILE"
    
    # This command was likely correct, but we ensure consistency.
    # It replaces the placeholder index with the real hash value.
    sed -i "s|index: /|index: /?hash=$AUTH_HASH|" "$COMPOSE_FILE"

    # --- Step 4: Verify and Exit ---
    if grep -q "source: /var/run/docker.sock" "$COMPOSE_FILE" && grep -q "AUTH_HASH: \"$AUTH_HASH\"" "$COMPOSE_FILE"; then
      echo "‚úÖ Successfully modified compose file. Handing control to installer."
    else
      echo "‚ùå Failed to modify the compose file. Please check the corrected sed commands."
      # echo "--- Current Compose File Content ---"
      # cat "$COMPOSE_FILE"
      # echo "------------------------------------"
      exit 1
    fi
    