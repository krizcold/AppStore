name: yunderagithubcompiler

services:
  yunderagithubcompiler:
    image: krizcold/yundera-github-compiler:latest
    container_name: yunderagithubcompiler
    restart: unless-stopped
    user: root
    expose:
      - "3000"
    entrypoint: ["/bin/sh"]
    command:
      - -c
      - |
        chmod 644 /app/casaos-config/docker-compose.yml || true
        # Check if docker socket exists and test permissions
        if [ -S /var/run/docker.sock ]; then
          echo "🔍 Docker socket found, testing access..."
          docker --version && echo "✅ Docker access works" || echo "❌ Docker access failed"
        fi
        npm run setup
    environment:
      # --> GitHub token for repository access
      # REPO_0: "https://<TOKEN>@github.com/yourorg/private-repo-1.git"
      # REPO_1: "https://<TOKEN>@github.com/yourorg/private-repo-2.git"
      # --> Optional: disable auto-update on a per-repo basis
      # REPO_0_AUTOUPDATE: "true"

      # --> Optional: Run a custom command on run
      # DIAG_COMMAND: ""

      UPDATE_INTERVAL: "3600"
      FORCE_UPDATE_GLOBAL: "true"
      WEBUI_PORT: "3000"
      
      # AppStore deployment mode
      DEPLOYMENT_MODE: "appstore"
      CASAOS_API_HOST: "localhost"
      CASAOS_API_PORT: "8080"
      
      # Add CasaOS-like environment variables (from NSL setup)
      PUID: ${PUID}
      PGID: ${PGID}
      DATA_ROOT: "/DATA"
      REF_NET: "pcs"

    volumes:        
      # cloned repos
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/repos
        target: /app/repos

      # Mount our app directory as read-write to modify compose file
      - type: bind
        source: /DATA/AppData/casaos/apps/yunderagithubcompiler
        target: /app/casaos-config

      # Mount DATA directory as read-only
      - type: bind
        source: /DATA
        target: /DATA
        read_only: true

      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

    # Connect to the same network as the CasaOS service
    networks:
      - pcs
    
    # Add privileges to access CasaOS data (similar to CasaOS container)
    privileged: true
    
    # Add capabilities
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN

    x-casaos:
      volumes:
        - container: /app/repos
          description:
            en_us: "Git repos are cloned here."
        - container: /DATA
          description:
            en_us: "Access to DATA directory (read-only via pre-install setup"

# Define the network as external, since it's created by the main NSL stack
networks:
  pcs:
    external: true

x-casaos:
  architectures:
    - amd64
    - arm64
  main: yunderagithubcompiler
  author: krizcold
  developer: krizcold
  icon: https://github.com/krizcold/Yundera-Github-Compiler/blob/main/YunderaCompiler.png?raw=true
  tagline:
    en_us: "Automatically build and deploy GitHub repos on Yundera"
  category: Utilities
  description:
    en_us: "Clone, build, and run Docker-based projects directly from GitHub URLs."
  title:
    en_us: "Yundera GitHub Compiler"
  store_app_id: yunderagithubcompiler
  is_uncontrolled: false
  index: /
  webui_port: 3000
  pre-install-cmd: |
    # Create a background restart handler
    cat > /tmp/yundera-restart-handler.sh << 'EOF'
    #!/bin/bash
    echo "🔄 Yundera restart handler started, waiting for signal..."
    
    # Wait for signal file for up to 30 seconds
    for i in {1..30}; do
      if [ -f "/tmp/yundera-restart-signal" ]; then
        echo "📡 Restart signal received, executing restart..."
        
        # Get the compose file path from the signal file
        COMPOSE_FILE=$(cat /tmp/yundera-restart-signal)
        echo "📁 Using compose file: $COMPOSE_FILE"
        
        # Execute the restart command
        docker-compose -f "$COMPOSE_FILE" up -d --force-recreate yunderagithubcompiler
        
        # Clean up
        rm -f /tmp/yundera-restart-signal
        echo "✅ Restart completed, handler exiting"
        exit 0
      fi
      sleep 1
    done
    
    echo "⏰ Timeout reached, handler exiting"
    exit 1
    EOF
    
    # Make it executable and run in background
    chmod +x /tmp/yundera-restart-handler.sh
    nohup /tmp/yundera-restart-handler.sh > /tmp/yundera-restart.log 2>&1 &
    
    echo "🚀 Background restart handler launched"
