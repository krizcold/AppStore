name: yunderagithubcompiler

services:
  yunderagithubcompiler:
    image: krizcold/yundera-github-compiler:latest
    container_name: yunderagithubcompiler
    restart: unless-stopped
    expose:
      - "3000"
    user: "root"
    entrypoint: ["/bin/sh"]
    command:
      - -c
      - |
        npm run setup
    environment:
      # Application settings
      WEBUI_PORT: "3000"
      
      # CasaOS integration
      DEPLOYMENT_MODE: "appstore"
      CASAOS_API_HOST: "localhost"
      CASAOS_API_PORT: "8080"
      DATA_ROOT: $DATA_ROOT

    volumes:        
      # cloned repos
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/repos
        target: /app/repos

      # persistent UI data storage
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/uidata
        target: /app/uidata

      # Mount DATA directory as read-only
      - type: bind
        source: /DATA
        target: /DATA
        read_only: true

      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

    # Connect to the same network as the CasaOS service
    networks:
      - pcs
    
    # Add privileges to access CasaOS data (similar to CasaOS container)
    privileged: true
    
    # Add capabilities
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN

    x-casaos:
      volumes:
        - container: /app/repos
          description:
            en_us: "Git repos are cloned here."
        - container: /app/uidata
          description:
            en_us: "Persistent UI data storage."

# Define the network as external, since it's created by the main NSL stack
networks:
  pcs:
    external: true

x-casaos:
  architectures:
    - amd64
    - arm64
  main: yunderagithubcompiler
  author: krizcold
  developer: krizcold
  icon: https://github.com/krizcold/Yundera-Github-Compiler/blob/main/YunderaCompiler.png?raw=true
  tagline:
    en_us: "Automatically build and deploy GitHub repos on Yundera"
  category: Utilities
  description:
    en_us: "Clone, build, and run Docker-based projects directly from GitHub URLs."
  title:
    en_us: "Yundera GitHub Compiler"
  store_app_id: yunderagithubcompiler
  is_uncontrolled: false
  index: /
  webui_port: 3000
  pre-install-cmd: |
    #!/bin/bash
    set -e

    # Define all logic inside a function to protect it from the buggy installer parser.
    main() {
      echo "🚀 Pre-install: Arming the background fixer script..."

      # 1. Generate dynamic values. These are now safely inside a function.
      AUTH_HASH=$(openssl rand -hex 32)
      if [ -z "$AUTH_HASH" ]; then exit 1; fi
      echo "🔐 Generated AUTH_HASH: ${AUTH_HASH:0:16}..."
      
      COMPOSE_FILE="/DATA/AppData/casaos/apps/yunderagithubcompiler/docker-compose.yml"
      FIXER_SCRIPT="/tmp/yundera_final_fixer.sh"

      # 2. Use a series of simple echos to build the fixer script. This is the most robust method.
      echo '#!/bin/bash' > "$FIXER_SCRIPT"
      echo "echo '--- [Fixer] Activated. Waiting 15s for initial install...'" >> "$FIXER_SCRIPT"
      echo "sleep 15" >> "$FIXER_SCRIPT"
      
      echo "echo '--- [Fixer] Looking for compose file...'" >> "$FIXER_SCRIPT"
      # Use the real path in the check
      echo "if [ ! -f \"${COMPOSE_FILE}\" ]; then" >> "$FIXER_SCRIPT"
      echo "  echo '--- [Fixer] ERROR: Compose file not found. Exiting.'" >> "$FIXER_SCRIPT"
      echo "  exit 1" >> "$FIXER_SCRIPT"
      echo "fi" >> "$FIXER_SCRIPT"
      echo "echo '--- [Fixer] ✅ Compose file found. Applying all modifications...'" >> "$FIXER_SCRIPT"
      
      echo "DOCKER_GID=\$(stat -c '%g' /var/run/docker.sock 2>/dev/null || echo 999)" >> "$FIXER_SCRIPT"

      # 1. Add docker.sock mount
      echo "sed -i '/^[[:space:]]*read_only:[[:space:]]*true/a \\
            - type: bind\\
              source: /var/run/docker.sock\\
              target: /var/run/docker.sock' \"${COMPOSE_FILE}\"" >> "$FIXER_SCRIPT"

      # 2. Add environment variables. Note that $AUTH_HASH is expanded now, but \$DOCKER_GID is escaped.
      echo "sed -i \"/WEBUI_PORT:/a \\
            DOCKER_GID: \\\"\$DOCKER_GID\\\"\\
            AUTH_HASH: \\\"${AUTH_HASH}\\\"\" \"${COMPOSE_FILE}\"" >> "$FIXER_SCRIPT"

      # 3. Modify the index line
      echo "sed -i \"s|index: /|index: /?hash=${AUTH_HASH}|\" \"${COMPOSE_FILE}\"" >> "$FIXER_SCRIPT"
      
      echo "echo '--- [Fixer] ✅ All changes applied. Restarting container...'" >> "$FIXER_SCRIPT"
      echo "(cd \"/DATA/AppData/casaos/apps/yunderagithubcompiler\" && docker-compose up -d --force-recreate)" >> "$FIXER_SCRIPT"
      echo "echo '--- [Fixer] ✅ Process complete.'" >> "$FIXER_SCRIPT"

      # 3. Launch the generated script
      chmod +x "$FIXER_SCRIPT"
      nohup "$FIXER_SCRIPT" > /tmp/yundera_fixer.log 2>&1 &

      echo "🏁 Pre-install finished. Background fixer is armed. See logs at /tmp/yundera_fixer.log"
    }

    # Execute the main function. This is the only command at the top level.
    main