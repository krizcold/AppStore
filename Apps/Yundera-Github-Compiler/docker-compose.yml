name: yunderagithubcompiler

services:
  yunderagithubcompiler:
    image: krizcold/yundera-github-compiler:latest
    container_name: yunderagithubcompiler
    restart: unless-stopped
    expose:
      - "3000"
    user: "root"
    entrypoint: ["/bin/sh"]
    command:
      - -c
      - |
        npm run setup
    environment:
      # Application settings
      WEBUI_PORT: "3000"
      
      # CasaOS integration
      DEPLOYMENT_MODE: "appstore"
      CASAOS_API_HOST: "localhost"
      CASAOS_API_PORT: "8080"
      DATA_ROOT: $DATA_ROOT

    volumes:        
      # cloned repos
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/repos
        target: /app/repos

      # persistent UI data storage
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/uidata
        target: /app/uidata

      # Mount DATA directory as read-only
      - type: bind
        source: /DATA
        target: /DATA
        read_only: true

      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

    # Connect to the same network as the CasaOS service
    networks:
      - pcs
    
    # Add privileges to access CasaOS data (similar to CasaOS container)
    privileged: true
    
    # Add capabilities
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN

    x-casaos:
      volumes:
        - container: /app/repos
          description:
            en_us: "Git repos are cloned here."
        - container: /app/uidata
          description:
            en_us: "Persistent UI data storage."

# Define the network as external, since it's created by the main NSL stack
networks:
  pcs:
    external: true

x-casaos:
  architectures:
    - amd64
    - arm64
  main: yunderagithubcompiler
  author: krizcold
  developer: krizcold
  icon: https://github.com/krizcold/Yundera-Github-Compiler/blob/main/YunderaCompiler.png?raw=true
  tagline:
    en_us: "Automatically build and deploy GitHub repos on Yundera"
  category: Utilities
  description:
    en_us: "Clone, build, and run Docker-based projects directly from GitHub URLs."
  title:
    en_us: "Yundera GitHub Compiler"
  store_app_id: yunderagithubcompiler
  is_uncontrolled: false
  index: /
  webui_port: 3000
  pre-install-cmd: |
    #!/bin/bash
    set -e
    
    echo "🚀 Hybrid pre-install script started."

    # --- Part 1: Synchronous Fix (to prevent the panic) ---
    
    AUTH_HASH=$(openssl rand -hex 32)
    if [ -z "$AUTH_HASH" ]; then exit 1; fi
    echo "🔐 Generated AUTH_HASH: ${AUTH_HASH:0:16}..."
    
    COMPOSE_FILE="/DATA/AppData/casaos/apps/yunderagithubcompiler/docker-compose.yml"
    echo "⏳ Waiting for initial compose file at $COMPOSE_FILE..."
    counter=0
    while [ ! -f "$COMPOSE_FILE" ] && [ $counter -lt 60 ]; do
      sleep 2; counter=$((counter + 2))
    done
    if [ ! -f "$COMPOSE_FILE" ]; then echo "❌ Compose file not found."; exit 1; fi
    echo "✅ Initial compose file found."

    echo "🔧 Applying initial HASH fix to prevent installer panic..."
    sed -i "s|index: /|index: /?hash=$AUTH_HASH|" "$COMPOSE_FILE"

    echo "✅ Initial fix applied. The installer can now proceed."

    # --- Part 2: Asynchronous Fixer (created with a robust echo command) ---
    
    echo "🚀 Launching background fixer script (created via echo/redirect)..."

    # Use a single, double-quoted echo command to create the script.
    # This avoids all EOF/indentation issues.
    # - The outer double quotes allow $AUTH_HASH to be expanded correctly.
    # - Internal quotes (") and dollar signs ($) that must be literal in the
    #   final script are escaped with a backslash (\).
    echo "#!/bin/bash
    echo \"--- Fixer Script Activated ---\"
    sleep 15
    
    echo \"🔧 Fixer: Modifying compose file to add docker.sock and env vars...\"
    
    DOCKER_GID=\$(stat -c '%g' /var/run/docker.sock 2>/dev/null || echo 999)
    
    # Use the same robust sed commands from before.
    sed -i '/^[[:space:]]*read_only:[[:space:]]*true/a \\
          - type: bind\\
            source: /var/run/docker.sock\\
            target: /var/run/docker.sock' \"$COMPOSE_FILE\"

    sed -i \"/WEBUI_PORT:/a \\
          DOCKER_GID: \\\"\$DOCKER_GID\\\"\\
          AUTH_HASH: \\\"$AUTH_HASH\\\"\" \"$COMPOSE_FILE\"
    
    echo \"🔄 Fixer: Restarting container with the final, correct configuration...\"
    (cd \"/DATA/AppData/casaos/apps/yunderagithubcompiler\" && docker-compose up -d --force-recreate)
    
    echo \"✅ Fixer: Process complete.\"
    " > /tmp/yundera_final_fixer.sh

    # Make the background script executable and run it in the background.
    chmod +x /tmp/yundera_final_fixer.sh
    nohup /tmp/yundera_final_fixer.sh > /tmp/yundera_fixer.log 2>&1 &

    echo "🏁 Synchronous script finished. Background fixer is now waiting."
