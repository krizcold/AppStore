name: yunderagithubcompiler

services:
  yunderagithubcompiler:
    image: krizcold/yundera-github-compiler:latest
    container_name: yunderagithubcompiler
    restart: unless-stopped
    expose:
      - "3000"
    user: "root"
    entrypoint: ["/bin/sh"]
    command:
      - -c
      - |
        npm run setup
    environment:
      # Application settings
      WEBUI_PORT: "3000"
      
      # CasaOS integration
      DEPLOYMENT_MODE: "appstore"
      CASAOS_API_HOST: "localhost"
      CASAOS_API_PORT: "8080"
      DATA_ROOT: $DATA_ROOT

    volumes:        
      # cloned repos
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/repos
        target: /app/repos

      # persistent UI data storage
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/uidata
        target: /app/uidata

      # Mount DATA directory as read-only
      - type: bind
        source: /DATA
        target: /DATA
        read_only: true

      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

    # Connect to the same network as the CasaOS service
    networks:
      - pcs
    
    # Add privileges to access CasaOS data (similar to CasaOS container)
    privileged: true
    
    # Add capabilities
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN

    x-casaos:
      volumes:
        - container: /app/repos
          description:
            en_us: "Git repos are cloned here."
        - container: /app/uidata
          description:
            en_us: "Persistent UI data storage."

# Define the network as external, since it's created by the main NSL stack
networks:
  pcs:
    external: true

x-casaos:
  architectures:
    - amd64
    - arm64
  main: yunderagithubcompiler
  author: krizcold
  developer: krizcold
  icon: https://github.com/krizcold/Yundera-Github-Compiler/blob/main/YunderaCompiler.png?raw=true
  tagline:
    en_us: "Automatically build and deploy GitHub repos on Yundera"
  category: Utilities
  description:
    en_us: "Clone, build, and run Docker-based projects directly from GitHub URLs."
  title:
    en_us: "Yundera GitHub Compiler"
  store_app_id: yunderagithubcompiler
  is_uncontrolled: false
  index: /
  webui_port: 3000
  pre-install-cmd: |
    #!/bin/bash
    set -e
    
    echo "üöÄ TESTING: Synchronous pre-install for docker.sock injection."

    # --- Step 1: Define path and wait for the installer to create the compose file ---
    COMPOSE_FILE="/DATA/AppData/casaos/apps/yunderagithubcompiler/docker-compose.yml"
    echo "‚è≥ Waiting for compose file to be created at: $COMPOSE_FILE..."
    
    counter=0
    # Wait up to 1 minute for the file to appear
    while [ ! -f "$COMPOSE_FILE" ] && [ $counter -lt 60 ]; do
      sleep 2
      counter=$((counter + 2))
    done

    if [ ! -f "$COMPOSE_FILE" ]; then
      echo "‚ùå ERROR: Compose file was not created in time. Aborting."
      exit 1
    fi
    echo "‚úÖ Compose file found."

    # --- Step 2: Modify the compose file to add the docker.sock mount ---
    echo "üîß Modifying compose file to inject docker.sock..."

    # This sed command finds the unique line 'read_only: true' and APPENDS (`a \`)
    # the correctly indented multi-line block for the docker.sock volume right after it.
    # The indentation (6 spaces for `-`, 8 for keys) is critical for valid YAML.
    sed -i '/^[[:space:]]*read_only:[[:space:]]*true/a \
        - type: bind\
          source: /var/run/docker.sock\
          target: /var/run/docker.sock' "$COMPOSE_FILE"

    # --- Step 3: Verify the change and exit ---
    if grep -q "source: /var/run/docker.sock" "$COMPOSE_FILE"; then
      echo "‚úÖ SUCCESS: docker.sock was successfully injected. Handing control to installer."
    else
      echo "‚ùå FAILED: The script ran, but docker.sock was not found in the final compose file."
      exit 1
    fi
