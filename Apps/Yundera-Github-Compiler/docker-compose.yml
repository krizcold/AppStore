name: yunderagithubcompiler

services:
  yunderagithubcompiler:
    image: krizcold/yundera-github-compiler:latest
    container_name: yunderagithubcompiler
    restart: unless-stopped
    expose:
      - "3000"
    user: "root"
    entrypoint: ["/bin/sh"]
    command:
      - -c
      - |
        npm run setup
    environment:
      # Application settings
      WEBUI_PORT: "3000"
      
      # CasaOS integration
      DEPLOYMENT_MODE: "appstore"
      CASAOS_API_HOST: "localhost"
      CASAOS_API_PORT: "8080"
      DATA_ROOT: $DATA_ROOT

    volumes:        
      # cloned repos
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/repos
        target: /app/repos

      # persistent UI data storage
      - type: bind
        source: /DATA/AppData/yunderagithubcompiler/uidata
        target: /app/uidata

      # Mount DATA directory as read-only
      - type: bind
        source: /DATA
        target: /DATA
        read_only: true

      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

    # Connect to the same network as the CasaOS service
    networks:
      - pcs
    
    # Add privileges to access CasaOS data (similar to CasaOS container)
    privileged: true
    
    # Add capabilities
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN

    x-casaos:
      volumes:
        - container: /app/repos
          description:
            en_us: "Git repos are cloned here."
        - container: /app/uidata
          description:
            en_us: "Persistent UI data storage."

# Define the network as external, since it's created by the main NSL stack
networks:
  pcs:
    external: true

x-casaos:
  architectures:
    - amd64
    - arm64
  main: yunderagithubcompiler
  author: krizcold
  developer: krizcold
  icon: https://github.com/krizcold/Yundera-Github-Compiler/blob/main/YunderaCompiler.png?raw=true
  tagline:
    en_us: "Automatically build and deploy GitHub repos on Yundera"
  category: Utilities
  description:
    en_us: "Clone, build, and run Docker-based projects directly from GitHub URLs."
  title:
    en_us: "Yundera GitHub Compiler"
  store_app_id: yunderagithubcompiler
  is_uncontrolled: false
  index: /
  webui_port: 3000
  pre-install-cmd: |
    #!/bin/bash
    set -e
    
    echo "🚀 Pre-install script started. Launching background fixer."

    # Generate the hash that the background script will use later.
    AUTH_HASH=$(openssl rand -hex 32)
    if [ -z "$AUTH_HASH" ]; then exit 1; fi
    echo "🔐 Generated AUTH_HASH for background process: ${AUTH_HASH:0:16}..."

    # The path to the compose file that will eventually be created.
    COMPOSE_FILE="/DATA/AppData/casaos/apps/yunderagithubcompiler/docker-compose.yml"

    # Use `echo` to create the robust background fixer script.
    # This script contains ALL the logic that needs to happen AFTER the initial install.
    echo "#!/bin/bash
    echo \"--- [Background Fixer] Activated. Waiting for initial install to complete...\"
    # Give the main installer time to create the container, even if it's flawed.
    sleep 15
    
    echo \"--- [Background Fixer] Waiting for compose file to appear at $COMPOSE_FILE...\"
    counter=0
    while [ ! -f \"$COMPOSE_FILE\" ] && [ \$counter -lt 60 ]; do
      sleep 2; counter=\$((counter + 2))
    done
    
    if [ ! -f \"$COMPOSE_FILE\" ]; then
      echo \"--- [Background Fixer] ERROR: Compose file never appeared. Exiting.\"
      exit 1
    fi
    echo \"--- [Background Fixer] ✅ Compose file found. Applying final configuration...\"

    # Get Docker GID
    DOCKER_GID=\$(stat -c '%g' /var/run/docker.sock 2>/dev/null || echo 999)

    # 1. Add docker.sock mount
    sed -i '/^[[:space:]]*read_only:[[:space:]]*true/a \\
          - type: bind\\
            source: /var/run/docker.sock\\
            target: /var/run/docker.sock' \"$COMPOSE_FILE\"

    # 2. Add environment variables
    sed -i \"/WEBUI_PORT:/a \\
          DOCKER_GID: \\\"\$DOCKER_GID\\\"\\
          AUTH_HASH: \\\"$AUTH_HASH\\\"\" \"$COMPOSE_FILE\"
    
    # 3. Modify the index line to include the hash
    sed -i \"s|index: /|index: /?hash=$AUTH_HASH|\" \"$COMPOSE_FILE\"

    echo \"--- [Background Fixer] ✅ Final configuration applied. Restarting container...\"
    
    # Use docker compose to force-recreate the container with the correct settings.
    (cd \"/DATA/AppData/casaos/apps/yunderagithubcompiler\" && docker-compose up -d --force-recreate)
    
    echo \"--- [Background Fixer] ✅ Process complete. App should now be running correctly.\"
    " > /tmp/yundera_final_fixer.sh

    # Make the background script executable and run it.
    chmod +x /tmp/yundera_final_fixer.sh
    nohup /tmp/yundera_final_fixer.sh > /tmp/yundera_fixer.log 2>&1 &

    echo "🏁 Pre-install finished. Handing control to main installer. Check logs at /tmp/yundera_fixer.log"
