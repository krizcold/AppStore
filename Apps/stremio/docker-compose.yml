name: stremio

services:
  stremioserver:
    image: stremio/server:latest
    container_name: stremioserver
    restart: unless-stopped
    expose:
      - 11470
    environment:
      NO_CORS: "1"
      APP_PATH: "/root/.stremio-server"
    volumes:
      - type: bind
        source: $DATA_ROOT/AppData/stremio/config
        target: /root/.stremio-server
    networks:
      - pcs
    x-casaos:
      volumes:
        - container: /root/.stremio-server
          description:
            en_us: "Stremio server configuration and data"

  stremioweb:
    image: nginx:alpine
    container_name: stremioweb
    restart: unless-stopped
    user: "0:0"
    expose:
      - 8080
    volumes:
      - type: bind
        source: $DATA_ROOT/AppData/stremio/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
      - type: bind
        source: $DATA_ROOT/AppData/stremio/web/build
        target: /usr/share/nginx/html
        read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
    privileged: true
    depends_on:
      - stremioserver
    networks:
      - pcs

  stremioauth:
    image: nginx:alpine
    container_name: stremioauth
    restart: unless-stopped
    user: "0:0"
    expose:
      - 80
    environment:
      AUTH_PASSWORD: "$default_pwd"
      UPSTREAM: "http://stremioweb:8080"
    entrypoint: ["/docker-entrypoint.sh"]
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - type: bind
        source: $DATA_ROOT/AppData/stremio/auth-entrypoint.sh
        target: /docker-entrypoint.sh
        read_only: true
      - type: bind
        source: $DATA_ROOT/AppData/stremio/auth-nginx.conf
        target: /etc/nginx/nginx.conf.template
        read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
    depends_on:
      - stremioweb
    networks:
      - pcs
    x-casaos:
      envs:
        - container: AUTH_PASSWORD
          description:
            en_us: "Password for 'admin' user. Changes apply on container restart."

networks:
  pcs:
    external: true

x-casaos:
  architectures:
    - amd64
    - arm64
  main: stremioauth
  author: Stremio
  developer: Stremio
  icon: https://www.stremio.com/website/stremio-logo-small.png
  tagline:
    en_us: "Stream movies, series, live TV, and more"
  category: Entertainment
  description:
    en_us: "Stremio is a modern media center that gives you the freedom to watch everything you want. Multi-container setup with official Stremio server and web UI with password protection."
  tips:
    before_install:
      en_us: |
        Default Login Credentials
        | Username   | Password       |
        | --------   | ------------   |
        | `admin`    | `$default_pwd` |

        🔐 This app is password-protected using your PCS default password.

        💡 To change the password:
        1. Go to App Settings → Environment Variables
        2. Edit AUTH_PASSWORD to your new password
        3. Save and restart - new password active immediately!
  title:
    en_us: "Stremio"
  store_app_id: stremio
  is_uncontrolled: false
  index: /
  webui_port: 80
  pre-install-cmd: |
    mkdir -p /DATA/AppData/stremio/{config,web} 2>/dev/null || true
    chmod -R 755 /DATA/AppData/stremio/ 2>/dev/null || true

    # Download Stremio Web UI (official release v5.0.0-beta.27)
    if [ ! -f "/DATA/AppData/stremio/web/build/index.html" ]; then
      wget -q -O /tmp/stremio-web.zip https://github.com/Stremio/stremio-web/releases/download/v5.0.0-beta.27/stremio-web.zip || exit 1
      unzip -q /tmp/stremio-web.zip -d /DATA/AppData/stremio/web/ || exit 1
      rm /tmp/stremio-web.zip
    fi

    # Configure localStorage.json for automatic server URL detection
    if [ -f "/DATA/AppData/stremio/web/build/index.html" ]; then
      wget -q -O /DATA/AppData/stremio/localStorage.json https://raw.githubusercontent.com/tsaridas/stremio-docker/main/localStorage.json || exit 1
      sed -i 's|http://127\.0\.0\.1:11470/|DYNAMIC_SERVER_URL_PLACEHOLDER|g' /DATA/AppData/stremio/localStorage.json
      cp /DATA/AppData/stremio/localStorage.json /DATA/AppData/stremio/web/build/localStorage.json

      # Inject auto-configuration script (runs once on first load)
      sed -i 's|</head>|<script>if(!localStorage.getItem("stremio_configured")){fetch("/localStorage.json").then(r=>r.text()).then(data=>{localStorage.clear();const parsed=JSON.parse(data.replaceAll("DYNAMIC_SERVER_URL_PLACEHOLDER",window.location.origin+"/"));Object.keys(parsed).forEach(key=>localStorage.setItem(key,JSON.stringify(parsed[key])));localStorage.setItem("stremio_configured","true");console.log("Stremio configured for:",window.location.origin);window.location.reload()})}</script></head>|' /DATA/AppData/stremio/web/build/index.html
    fi

    # Create auth entrypoint script
    cat > /DATA/AppData/stremio/auth-entrypoint.sh <<'AUTHSCRIPT'
    #!/bin/sh
    set -e
    apk add --no-cache apache2-utils
    htpasswd -nbB admin "${AUTH_PASSWORD}" > /etc/nginx/.htpasswd
    envsubst '${UPSTREAM}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf
    exec "$@"
    AUTHSCRIPT
    chmod +x /DATA/AppData/stremio/auth-entrypoint.sh

    # Create auth nginx config template
    cat > /DATA/AppData/stremio/auth-nginx.conf <<'AUTHCONF'
    worker_processes auto;
    error_log /dev/stderr warn;
    pid /var/run/nginx.pid;
    events {
        worker_connections 1024;
    }
    http {
        server {
            listen 80;
            auth_basic "Stremio Login";
            auth_basic_user_file /etc/nginx/.htpasswd;
            location / {
                proxy_pass ${UPSTREAM};
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }
        }
    }
    AUTHCONF

    # Create nginx reverse proxy configuration
    if [ ! -f "/DATA/AppData/stremio/nginx.conf" ]; then
      cat > /DATA/AppData/stremio/nginx.conf <<'EOF'
    worker_processes auto;
    error_log /dev/stderr warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /dev/stdout main;

        sendfile on;
        keepalive_timeout 65;

        server {
            listen 8080;
            server_name _;

            # Serve static files from stremio-web
            location ~ \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|map|json)$ {
                root /usr/share/nginx/html;
                try_files $uri =404;
            }

            # Serve index.html for root
            location = / {
                root /usr/share/nginx/html;
                try_files /index.html =404;
            }

            # Serve other HTML files and directories, or proxy to backend
            location / {
                root /usr/share/nginx/html;
                try_files $uri @backend;
            }

            # Proxy everything else to stremio-server
            location @backend {
                proxy_pass http://stremioserver:11470;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
        }
    }
    EOF
    fi
