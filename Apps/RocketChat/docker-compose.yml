name: rocketchat

services:
  mongodb:
    image: mongo:7.0
    user: $PUID:$PGID
    restart: unless-stopped
    environment:
      PUID: $PUID
      PGID: $PGID
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 10s
      start_interval: 1s
      retries: 30
    volumes:
      - /DATA/AppData/rocketchat/mongodb/:/data/db/

  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:7.10.0
    restart: unless-stopped
    user: $PUID:$PGID
    cpu_shares: 70
    environment:
      ROOT_URL: https://rocketchat-$domain
      PORT: 80
      DEPLOY_METHOD: docker
      DEPLOY_PLATFORM: compose
      MONGO_URL: mongodb://mongodb:27017/rocketchat?replicaSet=rs0
      # For future use
      INSTANCE_IP:

      # Microservices settings (needed to start the service)
      MOLECULER_DISABLED: "true"
      DISABLE_MICROSERVICES: "true"
      MICRO_SERVICES_ENABLED: "false"

      # Privacy and telemetry settings
      ROCKETCHAT_STATISTICS_OPT_OUT: "true"
      ROCKETCHAT_UPDATE_CHECK_ENABLED: "false"
      ROCKETCHAT_FEDERATION_ENABLED: "false"

      # Apps marketplace settings
      ROCKETCHAT_APPS_ENGINE_ENABLED: "true"
      OVERWRITE_SETTING_APPS_ENGINE_ENABLED: "true"
      OVERWRITE_SETTING_MARKETPLACE_ENABLED: "true"

      # Cloud workspace settings
      ROCKETCHAT_CLOUD_WORKSPACE_REGISTRATION_REQUIRED: "false"
      OVERWRITE_SETTING_CLOUD_WORKSPACE_REGISTRATION_REQUIRED: "false"

      # Real-time communication settings
      OVERWRITE_SETTING_WEBSOCKET_ENABLED: "true"
      OVERWRITE_SETTING_REALTIME_ENABLED: "true"
      DDP_DEFAULT_CONNECTION_REUSE_ENABLED: "true"

      # Performance optimization
      METEOR_DISABLE_OPTIMISTIC_CACHING: "1"

      # Feature toggles (disabled for simplicity)
      OVERWRITE_SETTING_LIVECHAT_ENABLED: "false"
      OVERWRITE_SETTING_OMNICHANNEL_ENABLED: "false"
      OVERWRITE_SETTING_WEBRTC_ENABLED: "false"

      # Security settings
      OVERWRITE_SETTING_ACCOUNTS_ALLOW_ANONYMOUS_READ: "false"
      OVERWRITE_SETTING_ACCOUNTS_ALLOW_ANONYMOUS_WRITE: "false"
      OVERWRITE_SETTING_API_ENABLE_CORS: "false"

    expose:
      - 80
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-zv", "-w", "10", "rocketchat", "80"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 30s

x-casaos:
  index: /
  webui_port: 80
  main: rocketchat

  icon: https://cdn.jsdelivr.net/gh/Yundera/AppStore@main/Apps/RocketChat/icon.png
  screenshot_link:
    - https://cdn.jsdelivr.net/gh/Yundera/AppStore@main/Apps/RocketChat/screenshot-1.png
    - https://cdn.jsdelivr.net/gh/Yundera/AppStore@main/Apps/RocketChat/screenshot-2.png
    - https://cdn.jsdelivr.net/gh/Yundera/AppStore@main/Apps/RocketChat/screenshot-3.png
  thumbnail: https://cdn.jsdelivr.net/gh/Yundera/AppStore@main/Apps/RocketChat/screenshot-1.png

  architectures:
    - amd64
    - arm64
  author: Yundera Team
  category: Communication
  description:
    en_us: Complete team communication platform with secure messaging, file sharing, voice/video calls, and customizable integrations through marketplace apps.
    fr: Plateforme de communication d'équipe complète avec messagerie sécurisée, partage de fichiers, appels vocaux/vidéo et intégrations personnalisables via les applications marketplace.
    ko: 보안 메시징, 파일 공유, 음성/영상 통화, 마켓플레이스 앱을 통한 맞춤형 통합 기능을 제공하는 완전한 팀 커뮤니케이션 플랫폼.
    zh_cn: 完整的团队沟通平台，提供安全消息、文件共享、语音/视频通话以及通过市场应用程序进行可定制集成。
    es: Plataforma completa de comunicación en equipo con mensajería segura, compartir archivos, llamadas de voz/video e integraciones personalizables a través de aplicaciones del marketplace.
  developer: Rocket.Chat Technologies Corp.
  tagline:
    en_us: Private team communication with apps & integrations
    fr: Communication d'équipe privée avec apps et intégrations
    ko: 앱과 통합 기능을 지원하는 프라이빗 팀 커뮤니케이션
    zh_cn: 支持应用和集成的私密团队沟通
    es: Comunicación privada de equipo con apps e integraciones
  title:
    en_us: Rocket.Chat
  tips:
    before_install:
      en_us: |
        **Setup Process:**
        1. Initial setup wizard will appear
        2. Complete email verification for marketplace access
        3. Apps marketplace will be available in admin panel
        4. Install apps like GitHub, Jira, Google Drive integrations
        
        **Jitsi Video Conferencing Setup:**
        1. Go to **Administration → Apps → Marketplace**
        2. Search for "Jitsi" and click **Install**
        3. Use `/jitsi` command in any chat to start video calls
        4. Custom room: `/jitsi @MeetingRoom`
        5. Share the generated link with participants

      fr: |
        **Processus d'installation :**
        1. L'assistant de configuration initial apparaîtra
        2. Complétez la vérification par e-mail pour accéder au marketplace
        3. Le marketplace d'applications sera disponible dans le panneau d'administration
        4. Installez des applications comme GitHub, Jira, intégrations Google Drive
        
        **Configuration de la vidéoconférence Jitsi :**
        1. Allez dans **Administration → Apps → Marketplace**
        2. Recherchez "Jitsi" et cliquez sur **Installer**
        3. Utilisez la commande `/jitsi` dans n'importe quel chat pour démarrer des appels vidéo
        4. Salle personnalisée : `/jitsi @SalleDeMeeting`
        5. Partagez le lien généré avec les participants

      ko: |
        **설정 과정:**
        1. 초기 설정 마법사가 나타남
        2. 마켓플레이스 접근을 위한 이메일 인증 완료
        3. 관리자 패널에서 앱 마켓플레이스 사용 가능
        4. GitHub, Jira, Google Drive 통합 등 앱 설치 가능
        
        **Jitsi 화상회의 설정:**
        1. **관리 → 앱 → 마켓플레이스**로 이동
        2. "Jitsi" 검색 후 **설치** 클릭
        3. 채팅에서 `/jitsi` 명령어로 화상통화 시작
        4. 커스텀 룸: `/jitsi @회의실`
        5. 생성된 링크를 참가자들과 공유

      zh_cn: |
        **设置流程：**
        1. 将出现初始设置向导
        2. 完成邮箱验证以访问市场
        3. 应用市场将在管理面板中可用
        4. 安装GitHub、Jira、Google Drive等集成应用
        
        **Jitsi视频会议设置：**
        1. 前往**管理 → 应用 → 市场**
        2. 搜索"Jitsi"并点击**安装**
        3. 在任何聊天中使用`/jitsi`命令开始视频通话
        4. 自定义房间：`/jitsi @会议室`
        5. 与参与者分享生成的链接

      es: |
        **Proceso de configuración:**
        1. Aparecerá el asistente de configuración inicial
        2. Complete la verificación por correo electrónico para acceder al marketplace
        3. El marketplace de aplicaciones estará disponible en el panel de administración
        4. Instale aplicaciones como integraciones de GitHub, Jira, Google Drive
        
        **Configuración de videoconferencia Jitsi:**
        1. Vaya a **Administración → Apps → Marketplace**
        2. Busque "Jitsi" y haga clic en **Instalar**
        3. Use el comando `/jitsi` en cualquier chat para iniciar videollamadas
        4. Sala personalizada: `/jitsi @SalaDeReunión`
        5. Comparta el enlace generado con los participantes